cmake_minimum_required(VERSION 3.5.0)
project(OpenGL VERSION 0.3)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

# Get the VCPKG path from the VCPKG_LOCATION environment variable
set(VCPKG_LOCATION $ENV{VCPKG_LOCATION})

# Check if the VCPKG_LOCATION is defined
if(NOT VCPKG_LOCATION)
    message(FATAL_ERROR "VCPKG_LOCATION environment variable is not set.")
endif()

# Use the VCPKG path for include and link directories
include_directories("${VCPKG_LOCATION}/installed/x64-windows/include")
link_directories("${VCPKG_LOCATION}/installed/x64-windows/lib")


file(GLOB_RECURSE SOURCES src/*.c src/*.cpp src/*.h cr/*_r.cpp)

add_executable(${PROJECT_NAME} ${SOURCES})

target_link_libraries(${PROJECT_NAME} opengl32 glfw3dll)

# Set the output directory for the executable
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Debug)  # Adjust for your build type

# # Add a custom command to copy the Shaders folder after build
# add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
#     COMMAND ${CMAKE_COMMAND} -E copy_directory
#         "${CMAKE_CURRENT_SOURCE_DIR}/src/Shaders"
#         "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Shaders"
# )
